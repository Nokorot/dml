#!/bin/bash

# TODO bmdir="$HOME/.config/dmenu_run.wlist.d"
# brfile="$HOME/.config/gg-bookmarks"

# TODO: Flag to determin whether to start the program in a new prosess

bmfile="$HOME/.config/dml/main"

run() {
    echo $1 

    # [ -z $1 ] && exit

    l=$(_dml_cmp $bmfile | grep "^$1$\|^$1 ")
    # [ -z "$l" ] && notify-send "keyword '$1' was not found"

    c=$(echo $l | cut -d' ' -f2- )

    # [ -z "$c" ] && c=$1
    echo "Exec '$c'"

    # This way the code is executed in the current bash script.
    #  This is nessesary in order to use tmenu, in the same window.
    #  This might be a securety wondability though
    source <(echo "$c")
    # echo "$c" | ${SHELL:-"/bin/bash"} # &

}

tmenu_search() {
    tmenu -i <(_dml_cmp $bmfile | cut -d' ' -f1) "$1";
}


dmenu_search() {
    _dml_cmp $bmfile | \
        cut -d' ' -f1 | dmenu -i -p "$prompt"
}

usage() {
    echo "Usage: $0 [-c <file>] <choose>\\n   -c: dml-file, default '$bmfile' \\n" 1>&2; exit 1;}

while getopts "hc:p:" o; do case "${o}" in
	c) bmfile=$OPTARG ;;
    p) prompt=$OPTARG ;;
	*) usage && exit ;;
esac done

shift $((OPTIND-1))

if [ -z $1 ]; then
    # run "$(dmenu_search)"

    # There are some problems with timings. By using >(), a new prosess is started, 
    #       which in wsl is killed when the main program is done.
    tfile=$(mktemp)
    tmenu_search "$tfile" # >({ read i; run "$i"; }), 
    < "$tfile" read i; rm "$tfile"
    run "$i"
else
    run "$1"
fi


# < ~/.config/dmenu_run.wlist dmenu "$@" | ${SHELL:-"/bin/sh"} &
